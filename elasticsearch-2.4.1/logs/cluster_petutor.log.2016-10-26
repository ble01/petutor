[2016-10-26 09:59:09,347][DEBUG][action.admin.indices.create] [node_petutor_01] [_refresh'] failed to create
[_refresh'] InvalidIndexNameException[Invalid index name [_refresh'], must not start with '_']
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:431)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.access$100(MetaDataCreateIndexService.java:95)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:190)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:468)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:772)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-10-26 09:59:19,133][DEBUG][action.admin.indices.create] [node_petutor_01] [_refresh'] failed to create
[_refresh'] InvalidIndexNameException[Invalid index name [_refresh'], must not start with '_']
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:148)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:431)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.access$100(MetaDataCreateIndexService.java:95)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:190)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:468)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:772)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-10-26 11:21:19,305][DEBUG][action.admin.indices.create] [node_petutor_01] [conceptsML] failed to create
[conceptsML] InvalidIndexNameException[Invalid index name [conceptsML], must be lowercase]
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:151)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validate(MetaDataCreateIndexService.java:431)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.access$100(MetaDataCreateIndexService.java:95)
	at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService$1.execute(MetaDataCreateIndexService.java:190)
	at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)
	at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:468)
	at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:772)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)
	at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2016-10-26 11:21:39,033][INFO ][cluster.metadata         ] [node_petutor_01] [conceptsml] creating index, cause [auto(bulk api)], templates [], shards [5]/[1], mappings []
[2016-10-26 11:21:40,112][DEBUG][action.bulk              ] near combinations of the Xi and Yj which have maximum correlation with each other T R Knapp notes virtually all of the commonly encountered parametric tests of significance can be treated as special cases of canonical correlation analysis which is the general procedure for investigating the relationships between two sets of variables The method was first introduced by Harold Hotelling in It is important to be familiar with basic linear algebra and transposition in order to use canonical correlation analysis Contents [hide] Definition Computation Derivation Solution Implementation Hypothesis testing Practical uses Examples Connection to principal angles See also References External links Definition Given two column vectors X = x_ \\dots x_n' and Y = y_ \\dots y_m' of random variables with finite second moments one may define the cross covariance \\Sigma _{XY} = \\operatorname{cov}X Y to be the n \ imes m matrix whose i j entry is the covariance \\operatorname{cov}x_i y_j In practice we would estimate the covariance matrix based on sampled data from X and Y ie from a pair of data matrices Canonical correlation analysis seeks vectors a and b such that the random variables a' X and b' Y maximize the correlation \\rho = \\operatorname{corr}a' X b' Y The random variables U = a' X and V = b' Y are the first pair of canonical variables Then one seeks vectors maximizing the same correlation subject to the constraint that they are to be uncorrelated with the first pair of canonical variables; this gives the second pair of canonical variables This procedure may be continued up to \\min\\{mn\\} times Computation Derivation Let \\Sigma _{XX} = \\operatorname{cov}X X and \\Sigma _{YY} = \\operatorname{cov}Y Y The parameter to maximize is \\rho = \\frac{a' \\Sigma _{XY} b}{\\sqrt{a' \\Sigma _{XX} a} \\sqrt{b' \\Sigma _{YY} b}} The first step is to define a change of basis and define c = \\Sigma _{XX} ^{} a d = \\Sigma _{YY} ^{} b And thus we have \\rho = \\frac{c' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } d}{\\sqrt{c' c} \\sqrt{d' d}} By the Cauchy Schwarz inequality we have \\leftc' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\right d \\leq \\leftc' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c \\right^{} \\leftd' d \\right^{} \\rho \\leq \\frac{\\leftc' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c \\right^{}}{\\leftc' c \\right^{}} There is equality if the vectors d and \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c are collinear In addition the maximum of correlation is attained if c is the eigenvector with the maximum eigenvalue for the matrix \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } see Rayleigh quotient The subsequent pairs are found by using eigenvalues of decreasing magnitudes Orthogonality is guaranteed by the symmetry of the correlation matrices Solution The solution is therefore c is an eigenvector of \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } d is proportional to \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c Reciprocally there is also d is an eigenvector of \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } c is proportional to \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } d Reversing the change of coordinates we have that a is an eigenvector of \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} b is an eigenvector of \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } \\Sigma _{XY} a is proportional to \\Sigma _{XX} ^{ } \\Sigma _{XY} b b is proportional to \\Sigma _{YY} ^{ } \\Sigma _{YX} a The canonical variables are defined by U = c' \\Sigma _{XX} ^{ } X = a' X V = d' \\Sigma _{YY} ^{ } Y = b' Y Implementation CCA can be computed using singular value decomposition on a correlation matrix It is available as a function in MATLAB as canoncorr R as cancor or in FactoMineR SAS as proc cancorr Scikit Learn Python as Cross decomposition Hypothesis testing Each row can be tested for significance with the following method Since the correlations are sorted saying that row i is zero implies all further correlations are also zero If we have p independent observations in a sample and \\widehat{\\rho}_i is the estimated correlation for i = \\dots \\min\\{mn\\} For the ith row the test statistic is \\chi ^ = \\left p \\frac{}{}m + n + \\right \\ln \\prod _ {j = i} ^{\\min\\{mn\\}} \\widehat{\\rho}_j^ which is asymptotically distributed as a chi squared with m i + n i + degrees of dom for large p Since all the correlations from \\min\\{mn\\} to p are logically zero and estimated that way also the product for the terms after this point is irrelevant Practical uses A typical use for canonical correlation in the experimental context is to take two sets of variables and see what is common amongst the two sets For example in psychological testing you could take two well established multidimensional personality tests such as the Minnesota Multiphasic Personality Inventory MMPI and the NEO By seeing how the MMPI factors relate to the NEO factors you could gain insight into what dimensions were common between the tests and how much variance was shared For example you might find that an extraversion or neuroticism dimension accounted for a substantial amount of shared variance between the two tests One can also use canonical correlation analysis to produce a model equation which relates two sets of variables for example a set of performance measures and a set of explanatory variables or a set of outputs and set of inputs Constraint restrictions can be imposed on such a model to ensure it reflects theoretical requirements or intuitively obvious conditions This type of model is known as a maximum correlation model Visualization of the results of canonical correlation is usually through bar plots of the coefficients of the two sets of variables for the pairs of canonical variates showing significant correlation Some authors suggest that they are best visualized by plotting them as heliographs a circular format with ray like bars with each half representing the two sets of variables Examples Let X = x_ with zero expected value ie \\operatorname{E}X= If Y = X ie X and Y are perfectly correlated then eg a= and b= so that the first and only in this example pair of canonical variables is U = X and V = Y =X If Y = X ie X and Y are perfectly anticorrelated then eg a= and b= so that the first and only in this example pair of canonical variables is U = X and V = Y =X We notice that in both cases U =V which illustrates that the canonical correlation analysis treats correlated and anticorrelated variables similarly Connection to principal angles Assuming that X = x_ \\dots x_n' and Y = y_ \\dots y_m' have zero expected values ie \\operatorname{E}X=\\operatorname{E}Y= their covariance matrices \\Sigma _{XX} =\\operatorname{Cov}XX = \\operatorname{E}[X X'] and \\Sigma _{YY} =\\operatorname{Cov}YY = \\operatorname{E}[Y Y'] can be viewed as Gram matrices in an inner product for the entries of X and Y correspondingly In this interpretation the random variables entries x_i of X and y_j of Y are treated as elements of a vector space with an inner product given by the covariance \\operatorname{cov}x_i y_j see Covariance#Relationship to inner products The definition of the canonical variables U and V is then equivalent to the definition of principal vectors for the pair of subspaces spanned by the entries of X and Y with respect to this inner product The canonical correlations \\operatorname{corr}UV is equal to the cosine of principal angles See also Generalized Canonical Correlation Multilinear subspace learning RV coefficient Principal angles Principal component analysis Regularized canonical correlation analysis Singular value decomposition Partial least squares regression References Ha rdle Wolfgang; Simar Le opold Canonical Correlation Analysis Applied Multivariate Statistical Analysis pp doi _ ISBN Knapp T R Canonical correlation analysis A general parametric significance testing system Psychological Bulletin  doi Hotelling H Relations Between Two Sets of Variates Biometrika doibiomet JSTOR Hsu D; Kakade S M; Zhang T A spectral algorithm for learning Hidden Markov Models PDF Journal of Computer and System Sciences arXiv doijjcss Huang S Y; Lee M H; Hsiao C K Nonlinear measures of association with kernel canonical correlation analysis and applications PDF Journal of Statistical Planning and Inference doijjspi Kanti V Mardia J T Kent and J M Bibby Multivariate Analysis Academic Press Tofallis C Model Building with Multiple Dependent Variables and Constraints Journal of the Royal Statistical Society Series D The Statistician  arXiv doi Degani A; Shafto M; Olson L Canonical Correlation Analysis Use of Composite Heliographs for Representing Multiple Patterns Diagrammatic Representation and Inference PDF Lecture Notes in Computer Science p doi_ ISBN External links Hardoon D R; Szedmak S; Shawe Taylor J Canonical Correlation Analysis An Overview with Application to Learning Methods Neural Computation  doi PMID A note on the ordinal canonical correlation analysis of two sets of ranking scores Also provides a FORTRAN program in J of Quantitative Economics pp Representation Constrained Canonical Correlation Analysis A Hybridization of Canonical Correlation and Principal Component Analyses Also provides a FORTRAN program in J of Applied Economic Sciences pp Retrieved from httpsenorgwindexphptitle=Canonical_correlation&oldid= Categories Covariance and correlationMultivariate statistics This page was last modified on April at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization"}]}
MapperParsingException[failed to parse]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@36409dab; line: 1, column: 1260]];
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:156)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@36409dab; line: 1, column: 1260]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.index.mapper.DocumentParser.createBuilderFromDynamicValue(DocumentParser.java:517)
	at org.elasticsearch.index.mapper.DocumentParser.parseDynamicValue(DocumentParser.java:619)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:444)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	... 18 more
[2016-10-26 11:21:40,402][INFO ][cluster.metadata         ] [node_petutor_01] [conceptsml] create_mapping [machineLearning]
[2016-10-26 11:21:40,577][INFO ][cluster.routing.allocation] [node_petutor_01] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[conceptsml][4], [conceptsml][4]] ...]).
[2016-10-26 11:21:40,656][DEBUG][action.bulk              ]  using RNN encoder decoder for statistical machine translation in Proceedings of the Empiricial Methods in Natural Language Processing EMNLP Oct Cho Kyunghyun Aaron Courville and Yoshua Bengio Describing Multimedia Content using Attention based Encoder Decoder Networks arXiv Cho Youngmin Kernel Methods for Deep Learning PDF Scholkopf B; Smola Alexander Nonlinear component analysis as a kernel eigenvalue problem Neural computation doi L Deng G Tur X He and D Hakkani Tur Use of Kernel Deep Convex Networks and End To End Learning for Spoken Language Understanding Proc IEEE Workshop on Spoken Language Technologies TIMIT Acoustic Phonetic Continuous Speech Corpus Linguistic Data Consortium Philadelphia Abdel Hamid O; et al Convolutional Neural Networks for Speech Recognition IEEEACM Transactions on Audio Speech and Language Processing  doitaslp Deng L; Platt J Ensemble Deep Learning for Speech Recognition Proc Interspeech Yu D; Deng L Roles of Pre Training and Fine Tuning in Context Dependent DBN HMMs for Real World Speech Recognition NIPS Workshop on Deep Learning and Unsupervised Feature Learning Deng L Li J Huang J Yao K Yu D Seide F et al Recent Advances in Deep Learning for Speech Research at Microsoft ICASSP Deng L; Li Xiao Machine Learning Paradigms for Speech Recognition An Overview IEEE Transactions on Audio Speech and Language Processing doitasl L Deng M Seltzer D Yu A Acero A Mohamed and G Hinton Binary Coding of Speech Spectrograms Using a Deep Auto encoder Interspeech Z Tuske P Golik R Schl ter and H Ney Acoustic Modeling with Deep Neural Networks Using Raw Time Signal for LVCSR Interspeech McMillan R How Skype Used AI to Build Its Amazing New Language Translator Wire Dec Hannun et al Deep Speech Scaling up end to end speech recognition arXiv Ron Schneiderman Accuracy Apps Advance Speech Recognition  Interviews with Vlad Sejnoha and Li Deng IEEE Signal Processing Magazine Jan httpyannlecuncomexdbmnist D Ciresan U Meier J Schmidhuber Multi column Deep Neural Networks for Image Classification Technical Report No IDSIA D Ciresan A Giusti LM Gambardella J Schmidhuber Mitosis Detection in Breast Cancer Histology Images using Deep Neural Networks Proceedings MICCAI Vinyals et al Show and Tell A Neural Image Caption Generator arXiv Fang et al From Captions to Visual Concepts and Back arXiv Kiros et al Unifying Visual Semantic Embeddings with Multimodal Neural Language Models arXiv Zhong S; Liu Y; Liu Y Bilinear Deep Learning for Image Classification Proceedings of the th ACM International Conference on Multimedia Nvidia Demos a Car Computer Trained with Deep Learning  David Talbot MIT Technology Review Y Bengio R Ducharme P Vincent C Jauvin A Neural Probabilistic Language Model Journal of Machine Learning Research Goldberg Yoav; Levy Omar wordvec Explained Deriving Mikolov et al s Negative Sampling Word Embedding Method PDF Arxiv Retrieved October Socher Richard; Manning Christopher Deep Learning for NLP PDF Retrieved October Socher Richard; Bauer John; Manning Christopher; Ng Andrew Parsing With Compositional Vector Grammars PDF Proceedings of the ACL conference Socher Richard Recursive Deep Models for Semantic Compositionality Over a Sentiment Treebank PDF EMNLP Y Shen X He J Gao L Deng and G Mesnil A Latent Semantic Model with Convolutional Pooling Structure for Information Retrieval Proc CIKM P Huang X He J Gao L Deng A Acero and L Heck Learning Deep Structured Semantic Models for Web Search using Clickthrough Data Proc CIKM Mesnil G Dauphin Y Yao K Bengio Y Deng L Hakkani Tur D He X Heck L Tur G Yu D and Zweig G Using recurrent neural networks for slot filling in spoken language understanding IEEE Transactions on Audio Speech and Language Processing pp J Gao X He W Yih and L Deng Learning Continuous Phrase Representations for Translation Modeling Proc ACL J Gao P Pantel M Gamon X He L Deng Modeling Interestingness with Deep Neural Networks Proc EMNLP J Gao X He L Deng Deep Learning for Natural Language Processing Theory and Practice Tutorial CIKM Arrowsmith J; Miller P Trial watch Phase II and phase III attrition rates Nature Reviews Drug Discovery doinrd PMID Verbist B; Klambauer G; Vervoort L; Talloen W; The Qstar Consortium; Shkedy Z; Thas O; Bender A; G hlmann H W; Hochreiter S Using transcriptomics to guide lead optimization in drug discovery projects Lessons learned from the QSTAR project Drug Discovery Today doijdrudis PMID Announcement of the winners of the Merck Molecular Activity Challenge httpswwwkagglecomcMerckActivitydetailswinners Dahl G E; Jaitly N; & Salakhutdinov R Multi task Neural Networks for QSAR Predictions ArXiv Toxicology in the st century Data Challenge httpstripodnihgovtoxchallengeleaderboardjsp NCATS Announces Tox Data Challenge Winners httpwwwncatsnihgovnews and eventsfeaturestox challenge winnershtml Unterthiner T; Mayr A; Klambauer G; Steijaert M; Ceulemans H; Wegner J K; & Hochreiter S Deep Learning as an Opportunity in Virtual Screening Workshop on Deep Learning and Representation Learning NIPS Unterthiner T; Mayr A; Klambauer G; & Hochreiter S Toxicity Prediction using Deep Learning ArXiv Ramsundar B; Kearnes S; Riley P; Webster D; Konerding D;& Pande V Massively Multitask Networks for Drug Discovery ArXiv Wallach Izhar; Dzamba Michael; Heifets Abraham  AtomNet A Deep Convolutional Neural Network for Bioactivity Prediction in Structure based Drug Discovery arXiv Toronto startup has a faster way to discover effective medicines The Globe and Mail Retrieved  Startup Harnesses Supercomputers to Seek Cures KQED Future of You Retrieved httpwwwtheglobeandmailcomreport on businesssmall businessstarting outtoronto startup has a faster way to discover effective medicinesarticle%d%and%multiple%sclerosis%%b Tkachenko Yegor Autonomous CRM Control via CLV Approximation with Deep Reinforcement Learning in Discrete and Continuous Action Space April arXivorg httparxivorgabs Van den Oord Aaron Sander Dieleman and Benjamin Schrauwen Deep content based music recommendation Advances in Neural Information Processing Systems Elkahky Ali Mamdouh Yang Song and Xiaodong He A Multi View Deep Learning Approach for Cross Domain User Modeling in Recommendation Systems Proceedings of the th International Conference on World Wide Web International World Wide Web Conferences Steering Committee Davide Chicco Peter Sadowski and Pierre Baldi Deep autoencoder neural networks for gene ontology annotation predictions Proceedings of the th ACM Conference on Bioinformatics Computational Biology and Health Informatics ACM Utgoff P E; Stracuzzi D J Many layered learning Neural Computation doi J Elman et al Rethinking Innateness Shrager J; Johnson MH Dynamic plasticity influences the emergence of function in a simple cortical array Neural Networks  doi Quartz SR; Sejnowski TJ The neural basis of cognitive development A constructivist manifesto Behavioral and Brain Sciences  doisx S Blakeslee In brain's early growth timetable may be critical The New York Times Science Section pp B B {BUFILL} E Bufill J Agusti R Blesa Human neoteny revisited The case of synaptic plasticity American Journal of Human Biology pp J Shrager and M H Johnson Timing in the development of cortical function A computational approach In B Julesz and I Kovacs Eds Maturational windows and adult cortical plasticity D Hernandez The Man Behind the Google Brain Andrew Ng and the Quest for the New AI httpwwwwiredcomwiredenterpriseneuro artificial intelligenceall Wired May C Metz Facebook's 'Deep Learning' Guru Reveals the Future of AI httpwwwwiredcomwiredenterprisefacebook yann lecun qa Wired December V Vapnik researchfacebookcom Google AI algorithm masters ancient game of Go Nature News & Comment Retrieved Silver David; Huang Aja; Maddison Chris J; Guez Arthur; Sifre Laurent; van den Driessche George; Schrittwieser Julian; Antonoglou Ioannis; Panneershelvam Veda  Mastering the game of Go with deep neural networks and tree search Nature  doinature ISSN A Google DeepMind Algorithm Uses Deep Learning and More to Master the Game of Go | MIT Technology Review MIT Technology Review Retrieved  Blippar Demonstrates New Real Time Augmented Reality App TechCrunch G Marcus Is Deep Learning a Revolution in Artificial Intelligence The New Yorker November Smith G W March Art and Artificial Intelligence ArtEnt Retrieved March Knight Will November Tools point to African origin for human behaviour New Scientist Retrieved October Alexander Mordvintsev Christopher Olah and Mike Tyka June Inceptionism Going Deeper into Neural Networks Google Research Blog Retrieved June Alex Hern June Yes androids do dream of electric sheep The Guardian Retrieved June Ben Goertzel Are there Deep Reasons Underlying the Pathologies of Today's Deep Learning Algorithms Url httpgoertzelorgDeepLearning_vpdf Nguyen Anh Jason Yosinski and Jeff Clune Deep Neural Networks are Easily Fooled High Confidence Predictions for Unrecognizable Images arXiv Szegedy Christian et al Intriguing properties of neural networks arXiv Zhu SC; Mumford D A stochastic grammar of images Found Trends Comput Graph Vis  doi Miller G A and N Chomsky Pattern conception Paper for Conference on pattern detection University of Michigan Jason Eisner Deep Learning of Recursive Structure Grammar Induction httptechtalkstvtalksdeep learning of recursive structure grammar induction CNTK on Github Deeplearningj on Github Dean Jeff; Monga Rajat; et al November TensorFlow Large scale machine learning on heterogeneous systems PDF TensorFloworg Google Research Retrieved November Apache SINGA Website External links Deep Learning Libraries by Language Retrieved from httpsenorgwindexphptitle=Deep_learning&oldid= Categories Deep learning This page was last modified on May at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization"}]}
MapperParsingException[failed to parse [conceptDescription]]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@15b66d27; line: 1, column: 39776]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:329)
	at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:311)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:438)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@15b66d27; line: 1, column: 39776]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.common.xcontent.support.AbstractXContentParser.textOrNull(AbstractXContentParser.java:195)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateFieldForString(StringFieldMapper.java:372)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateField(StringFieldMapper.java:315)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:321)
	... 22 more
[2016-10-26 11:21:40,747][DEBUG][action.bulk              ]  and J rg Sander Its basic idea is similar to DBSCAN but it addresses one of DBSCAN's major weaknesses the problem of detecting meaningful clusters in data of varying density In order to do so the points of the database are linearly ordered such that points which are spatially closest become neighbors in the ordering Additionally a special distance is stored for each point that represents the density that needs to be accepted for a cluster in order to have both points belong to the same cluster This is represented as a dendrogram Contents [hide] Basic idea Pseudocode Extracting the clusters Complexity Extensions Availability References Basic idea Like DBSCAN OPTICS requires two parameters \\varepsilon which describes the maximum distance radius to consider and MinPts describing the number of points required to form a cluster A point p is a core point if at least MinPts points are found within its \\varepsilon neighborhood N_\\varepsilonp Contrary to DBSCAN OPTICS also considers points that are part of a more densely packed cluster so each point is assigned a core distance that describes the distance to the MinPtsth closest point \ ext{core dist}_{\\varepsilonMinPts}p=\\begin{cases}\ ext{UNDEFINED} & \ ext{if } |N_\\varepsilonp| < MinPts\\\\ MinPts\ ext{ th smallest distance to } N_\\varepsilonp & \ ext{otherwise}\\end{cases} The reachability distance of another point o from a point p is either the distance between o and p or the core distance of p whichever is bigger \ ext{reachability dist}_{\\varepsilonMinPts}op = \\begin{cases}\ ext{UNDEFINED} & \ ext{if } |N_\\varepsilonp| < MinPts\\\\ \\max\ ext{core dist}_{\\varepsilonMinPts}p \ ext{dist}po & \ ext{otherwise}\\end{cases} If p and o are nearest neighbors this is the \\varepsilon' < \\varepsilon we need to assume in order to have p and o belong to the same cluster Both the core distance and the reachability distance are undefined if no sufficiently dense cluster wrt \\varepsilon is available Given a sufficiently large \\varepsilon this will never happen but then every \\varepsilon neighborhood query will return the entire database resulting in On^ runtime Hence the \\varepsilon parameter is required to cut off the density of clusters that is no longer considered to be interesting and to speed up the algorithm this way The parameter \\varepsilon is strictly speaking not necessary It can simply be set to the maximum possible value When a spatial index is available however it does play a practical role with regards to complexity It is often claimed that OPTICS abstracts from DBSCAN by removing this parameter at least to the extent of only having to give the maximum value Pseudocode The basic approach of OPTICS is similar to DBSCAN but instead of maintaining a set of known but so far unprocessed cluster members a priority queue eg using an indexed heap is used OPTICSDB eps MinPts  for each point p of DB preachability distance = UNDEFINED  for each unprocessed point p of DB N = getNeighborsp eps mark p as processed output p to the ordered list if core distancep eps Minpts = UNDEFINED Seeds = empty priority queue updateN p Seeds eps Minpts for each next q in Seeds N' = getNeighborsq eps mark q as processed output q to the ordered list if core distanceq eps Minpts = UNDEFINED  updateN' q Seeds eps Minpts In update the priority queue Seeds is updated with the \\varepsilon neighborhood of p and q respectively updateN p Seeds eps Minpts  coredist = core distancep eps MinPts  for each o in N if o is not processed new reach dist = maxcoredist distpo if oreachability distance == UNDEFINED o is not in Seeds  oreachability distance = new reach dist  Seedsinserto new reach dist else o in Seeds check for improvement  if new reach dist < oreachability distance oreachability distance = new reach dist Seedsmove upo new reach dist OPTICS hence outputs the points in a particular ordering annotated with their smallest reachability distance in the original algorithm the core distance is also exported but this is not required for further processing Extracting the clusters OPTICSsvg Using a reachability plot a special kind of dendrogram the hierarchical structure of the clusters can be obtained easily It is a D plot with the ordering of the points as processed by OPTICS on the x axis and the reachability distance on the y axis Since points belonging to a cluster have a low reachability distance to their nearest neighbor the clusters show up as valleys in the reachability plot The deeper the valley the denser the cluster The image above illustrates this concept In its upper left area a synthetic example data set is shown The upper right part visualizes the spanning tree produced by OPTICS and the lower part shows the reachability plot as computed by OPTICS Colors in this plot are labels and not computed by the algorithm; but it is well visible how the valleys in the plot correspond to the clusters in above data set The yellow points in this image are considered noise and no valley is found in their reachability plot They will usually not be assigned to clusters except the omnipresent all data cluster in a hierarchical result Extracting clusters from this plot can be done manually by selecting a range on the x axis after visual inspection by selecting a threshold on the y axis the result will then be similar to a DBSCAN clustering result with the same \\varepsilon and minPts parameters; here a value of may yield good results or by different algorithms that try to detect the valleys by steepness knee detection or local maxima Clusterings obtained this way usually are hierarchical and cannot be achieved by a single DBSCAN run Complexity Like DBSCAN OPTICS processes each point once and performs one \\varepsilon neighborhood query during this processing Given a spatial index that grants a neighborhood query in O\\log n runtime an overall runtime of On \\cdot \\log n is obtained The authors of the original OPTICS paper report an actual constant slowdown factor of compared to DBSCAN Note that the value of \\varepsilon might heavily influence the cost of the algorithm since a value too large might raise the cost of a neighborhood query to linear complexity In particular choosing \\varepsilon > \\max_{xy} dxy larger than the maximum distance in the data set is possible but will obviously lead to quadratic complexity since every neighborhood query will return the full data set Even when no spatial index is available this comes at additional cost in managing the heap Therefore \\varepsilon should be chosen appropriately for the data set Extensions OPTICS OF is an outlier detection algorithm based on OPTICS The main use is the extraction of outliers from an existing run of OPTICS at low cost compared to using a different outlier detection method DeLi Clu Density Link Clustering combines ideas from single linkage clustering and OPTICS eliminating the \\varepsilon parameter and offering performance improvements over OPTICS HiSC is a hierarchical subspace clustering axis parallel method based on OPTICS HiCO is a hierarchical correlation clustering algorithm based on OPTICS DiSH is an improvement over HiSC that can find more complex hierarchies FOPTICS is a faster implementation using random projections Availability Java implementations of OPTICS OPTICS OF DeLi Clu HiSC HiCO and DiSH are available in the ELKI data mining framework with index acceleration for several distance functions and with automatic cluster extraction using the extraction method Other Java implementations include SPMF and in the Weka extensions no support for cluster extraction The Francis Crick Institute provides an implementation in C MathBio serverGitHub with R bindings but without index support The R package dbscan includes a C++ implementation of OPTICS using a kd tree for index acceleration for Euclidean distance only References Mihael Ankerst Markus M Breunig Hans Peter Kriegel J rg Sander OPTICS Ordering Points To Identify the Clustering Structure ACM SIGMOD international conference on Management of data ACM Press pp Martin Ester Hans Peter Kriegel J rg Sander Xiaowei Xu Evangelos Simoudis Jiawei Han Usama M Fayyad eds A density based algorithm for discovering clusters in large spatial databases with noise Proceedings of the Second International Conference on Knowledge Discovery and Data Mining KDD AAAI Press pp ISBN  Markus M Breunig Hans Peter Kriegel Raymond T Ng and J rg Sander OPTICS OF Identifying Local Outliers Principles of Data Mining and Knowledge Discovery Springer Verlag pp doib ISBN Achtert E; B hm C; Kr ger P DeLi Clu Boosting Robustness Completeness Usability and Efficiency of Hierarchical Clustering by a Closest Pair Ranking LNCS Advances in Knowledge Discovery and Data Mining Lecture Notes in Computer Science doi_ ISBN Achtert E; B hm C; Kriegel H P; Kr ger P; M ller Gorman I; Zimek A Finding Hierarchies of Subspace Clusters LNCS Knowledge Discovery in Databases PKDD Lecture Notes in Computer Science doi_ ISBN Achtert E; B hm C; Kr ger P; Zimek A Mining Hierarchies of Correlation Clusters Proc th International Conference on Scientific and Statistical Database Management SSDBM doiSSDBM ISBN  Achtert E; B hm C; Kriegel H P; Kr ger P; M ller Gorman I; Zimek A Detection and Visualization of Subspace Cluster Hierarchies LNCS Advances in Databases Concepts Systems and Applications Lecture Notes in Computer Science doi _ ISBN Schneider Johannes; Vlachos Michail Fast parameterless density based clustering via random projections nd ACM International Conference on Information and Knowledge ManagementCIKM ACM Retrieved from httpsenorgwindexphptitle=OPTICS_algorithm&oldid= Categories Data clustering algorithms This page was last modified on March at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization"}]}
MapperParsingException[failed to parse [conceptDescription]]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@2b4c3a50; line: 1, column: 1431]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:329)
	at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:311)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:438)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@2b4c3a50; line: 1, column: 1431]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.common.xcontent.support.AbstractXContentParser.textOrNull(AbstractXContentParser.java:195)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateFieldForString(StringFieldMapper.java:372)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateField(StringFieldMapper.java:315)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:321)
	... 22 more
[2016-10-26 11:21:41,421][DEBUG][action.bulk              ]  most likely to have generated the observed mixtures {\\displaystyle x} x from the unknown source signals {\\displaystyle s} s with pdf {\\displaystyle p_{s}} p_{s} then we need only find that {\\displaystyle \\mathbf {W} } \\mathbf {W} which maximizes the likelihood {\\displaystyle \\mathbf {LW} } \\mathbf{LW} The unmixing matrix that maximizes equation is known as the MLE of the optimal unmixing matrix It is common practice to use the log likelihood because this is easier to evaluate As the logarithm is a monotonic function the {\\displaystyle \\mathbf {W} } \\mathbf {W} that maximizes the function {\\displaystyle \\mathbf {LW} } \\mathbf{LW} also maximizes its logarithm {\\displaystyle \\ln \\mathbf {LW} } \\ln \\mathbf{LW} This allows us to take the logarithm of equation above which yields the log likelihood function {\\displaystyle \\ln \\mathbf {LW} =\\sum _{i}\\sum _{t}\\ln p_{s}w_{i}^{T}x_{t}+N\\ln |\\mathbf {W} |} \\ln \\mathbf{LW} =\\sum_{i}\\sum_{t} \\ln p_sw^T_ix_t + N\\ln|\\mathbf{W}| If we substitute a commonly used high Kurtosis model pdf for the source signals {\\displaystyle p_{s}= \ anhs^{}} p_s = \ anhs^ then we have {\\displaystyle \\ln \\mathbf {LW} ={ \\over N}\\sum _{i}^{M}\\sum _{t}^{N}\\ln \ anhw_{i}^{T}x_{t}^{}+\\ln |\\mathbf {W} |} \\ln \\mathbf{LW} ={ \\over N}\\sum_{i}^{M} \\sum_{t}^{N}\\ln \ anhw^T_i x_t ^ + \\ln |\\mathbf{W}| This matrix {\\displaystyle \\mathbf {W} } \\mathbf {W} that maximizes this function is the maximum likelihood estimation History and background[edit] The early general framework for independent component analysis was introduced by Jeanny H rault and Bernard Ans from then rejoined by Christian Jutten from and was most clearly stated by Pierre Comon in In Tony Bell and Terry Sejnowski introduced a fast and efficient ICA algorithm based on infomax a principle introduced by Ralph Linsker in There are many algorithms available in the literature which do ICA A largely used one including in industrial applications is the FastICA algorithm developed by Aapo Hyv rinen and Erkki Oja which uses the kurtosis as cost function Other examples are rather related to blind source separation where a more general approach is used For example one can drop the independence assumption and separate mutually correlated signals thus statistically dependent signals Sepp Hochreiter and J rgen Schmidhuber showed how to obtain non linear ICA or source separation as a by product of regularization Their method does not require a priori knowledge about the number of independent sources Applications[edit] ICA can be extended to analyze non physical signals For instance ICA has been applied to discover discussion topics on a bag of news list archives Some ICA applications are listed below Independent component analysis in EEGLAB optical Imaging of neurons neuronal spike sorting face recognition modeling receptive fields of primary visual neurons predicting stock market prices mobile phone communications color based detection of the ripeness of tomatoes removing artifacts such as eye blinks from EEG data See also[edit] Portal icon Machine learning portal Portal icon Statistics portal Blind deconvolution Factor analysis Hilbert spectrum Image processing Multilinear PCA Multilinear subspace learning Non negative matrix factorization NMF Nonlinear dimensionality reduction Projection pursuit Varimax rotation Notes[edit] ^ Jump up to a b Stone James V Independent component analysis a tutorial introduction Cambridge Mass [ua] MIT Press ISBN  Jump up ^ Aapo Hyvarinen Juha Karhunen ErkkiOja Independent component analysis st ed New York J Wiley ISBN  Jump up ^ Johan Himbergand Aapo Hyv rinen Independent Component Analysis For Binary Data An Experimental Study Proc Int Workshop on Independent Component Analysis and Blind Signal Separation ICA San Diego California Jump up ^ Huy Nguyen and Rong Zheng Binary Independent Component Analysis With or Mixtures IEEE Transactions on Signal Processing Vol Issue July pp Jump up ^ Painsky Amichai; Rosset Saharon; Feder Meir Generalized Binary Independent Component Analysis IEEE International Symposium on Information Theory ISIT Jump up ^ James V Stone; Independent Component Analysis A Tutorial Introduction The MIT Press Cambridge Massachusetts London England; ISBN  Jump up ^ Kruskal JB ; Toward a practical method which helps uncover the structure of a set of observations by finding the line transformation which optimizes a new index of condensation Pages of Milton RC & Nelder JA eds Statistical computation; New York Academic Press Jump up ^ Hyv rinen Aapo; Erkki Oja Independent Component AnalysisAlgorithms and Applications Neural Networks dois PMID Jump up ^ Independent component analysis [Reprinted] ed New York NY [ua] Wiley ISBN X |first= missing |last= in Authors list help Jump up ^ Hyv rinen Aapo New approximations of differential entropy for independent component analysis and projection pursuit Advances in Neural Information Processing Systems ^ Jump up to a b James V Stone; Independent Component Analysis A Tutorial Introduction The MIT Press Cambridge Massachusetts London England; ISBN  Jump up ^ H rault J; Ans B R seau de neurones synapses modifiables D codage de messages sensoriels composites par apprentissage non supervis et permanent Comptes Rendus de l'Acad mie des Sciences Paris S rie III Life Sciences Jump up ^ Ans B H rault J & Jutten C Architectures neuromim tiques adaptatives D tection de primitives Cognitiva Vol pp Paris CESTA Jump up ^ H rault J Jutten C & Ans B D tection de grandeurs primitives dans un message composite par une architecture de calcul neuromim tique en apprentissage non supervis Proceedings of the th Workshop Traitement du signal et ses applications Vol pp Nice France GRETSI Jump up ^ H rault J & Jutten C Space or time adaptive signal processing by neural networks models Intern Conf on Neural Networks for Computing pp Snowbird Utah USA Jump up ^ Pierre Comon Independent component analysis a new concept httpwwweceucsbeduwcslcoursesECEC_FMadhowcomonpdf Jump up ^ Brown GD; YamadaS; Sejnowski TJ Independent components analysis at the neural cocktail party Trends in neuroscience  dois Jump up ^ Lewicki MS Areview of methods for spike sorting detection and classification of neural action potentials Network Computation in neural systems Jump up ^ Barlett MS Face image analysis by unsupervised learning Boston Kluwer International Series on Engineering and Computer Science Jump up ^ Bell AJ; Sejnowski TJ The independent components of natural scenes are edge filters Vision Research  dois PMC PMID Jump up ^ Back AD; Weigend AS A first application of independent component analysis to extracting structure from stock returns International journal of neural systems  dois PMID Jump up ^ Hyvarinen A KarhunenJ & OjaE a Independent component analysis New York John Wiley and Sons Jump up ^ Polder G; van der Heijen FWAM Estimation of compound distribution in spectral images of tomatoes using independent component analysis Austrian Computer Society Jump up ^ Delorme A; Sejnowski T; Makeig S Enhanced detection of artifacts in EEG data using higher order statistics and independent component analysis NeuroImage  doijneuroimage References[edit] Comon Pierre Independent Component Analysis a new concept Signal Processing The original paper describing the concept of ICA Hyv rinen A; Karhunen J; Oja E Independent Component Analysis New York Wiley ISBN Introductory chapter Hyv rinen A; Oja E Independent Component Analysis Algorithms and Application Neural Networks Technical but pedagogical introduction Comon P; Jutten C Handbook of Blind Source Separation Independent Component Analysis and Applications Academic Press Oxford UK ISBN Lee T W Independent component analysis Theory and applications Boston Mass Kluwer Academic Publishers ISBN  Acharyya Ranjan A New Approach for Blind Source Separation of Convolutive Sources Wavelet Based Separation Using Shrinkage Function ISBN  ISBN this book focuses on unsupervised learning with Blind Source Separation External links[edit] What is independent component analysis by Aapo Hyv rinen Independent Component Analysis A Tutorial by Aapo Hyv rinen A Tutorial on Independent Component Analysis FastICA as a package for Matlab in R language C++ ICALAB Toolboxes for Matlab developed at RIKEN High Performance Signal Analysis Toolkit provides C++ implementations of FastICA and Infomax ICA toolbox Matlab tools for ICA with Bell Sejnowski Molgedey Schuster and mean field ICA Developed at DTU Demonstration of the cocktail party problem EEGLAB Toolbox ICA of EEG for Matlab developed at UCSD FMRLAB Toolbox ICA of fMRI for Matlab developed at UCSD Discussion of ICA used in a biomedical shape representation context FastICA CuBICA JADE and TDSEP algorithm for Python and more Group ICA Toolbox and Fusion ICA Toolbox Tutorial Using ICA for cleaning EEG signals Categories Signal processingData analysisTime series analysisStatistical modelsMultivariate statistics Navigation menu Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView history Search Go Main page Contents Featured content Current events Random article Donate to Wikipedia Wikipedia store Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page Printexport Create a book Download as PDF Printable version Languages Deutsch Espa ol Fran ais Italiano Polski Basa Sunda Svenska Edit links This page was last modified on July at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki"}]}
MapperParsingException[failed to parse [conceptDescription]]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@5d136a32; line: 1, column: 8867]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:329)
	at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:311)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:438)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@5d136a32; line: 1, column: 8867]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.common.xcontent.support.AbstractXContentParser.textOrNull(AbstractXContentParser.java:195)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateFieldForString(StringFieldMapper.java:372)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateField(StringFieldMapper.java:315)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:321)
	... 22 more
[2016-10-26 11:31:54,098][DEBUG][action.bulk              ] near combinations of the Xi and Yj which have maximum correlation with each other T R Knapp notes virtually all of the commonly encountered parametric tests of significance can be treated as special cases of canonical correlation analysis which is the general procedure for investigating the relationships between two sets of variables The method was first introduced by Harold Hotelling in It is important to be familiar with basic linear algebra and transposition in order to use canonical correlation analysis Contents [hide] Definition Computation Derivation Solution Implementation Hypothesis testing Practical uses Examples Connection to principal angles See also References External links Definition Given two column vectors X = x_ \\dots x_n' and Y = y_ \\dots y_m' of random variables with finite second moments one may define the cross covariance \\Sigma _{XY} = \\operatorname{cov}X Y to be the n \ imes m matrix whose i j entry is the covariance \\operatorname{cov}x_i y_j In practice we would estimate the covariance matrix based on sampled data from X and Y ie from a pair of data matrices Canonical correlation analysis seeks vectors a and b such that the random variables a' X and b' Y maximize the correlation \\rho = \\operatorname{corr}a' X b' Y The random variables U = a' X and V = b' Y are the first pair of canonical variables Then one seeks vectors maximizing the same correlation subject to the constraint that they are to be uncorrelated with the first pair of canonical variables; this gives the second pair of canonical variables This procedure may be continued up to \\min\\{mn\\} times Computation Derivation Let \\Sigma _{XX} = \\operatorname{cov}X X and \\Sigma _{YY} = \\operatorname{cov}Y Y The parameter to maximize is \\rho = \\frac{a' \\Sigma _{XY} b}{\\sqrt{a' \\Sigma _{XX} a} \\sqrt{b' \\Sigma _{YY} b}} The first step is to define a change of basis and define c = \\Sigma _{XX} ^{} a d = \\Sigma _{YY} ^{} b And thus we have \\rho = \\frac{c' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } d}{\\sqrt{c' c} \\sqrt{d' d}} By the Cauchy Schwarz inequality we have \\leftc' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\right d \\leq \\leftc' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c \\right^{} \\leftd' d \\right^{} \\rho \\leq \\frac{\\leftc' \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c \\right^{}}{\\leftc' c \\right^{}} There is equality if the vectors d and \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c are collinear In addition the maximum of correlation is attained if c is the eigenvector with the maximum eigenvalue for the matrix \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } see Rayleigh quotient The subsequent pairs are found by using eigenvalues of decreasing magnitudes Orthogonality is guaranteed by the symmetry of the correlation matrices Solution The solution is therefore c is an eigenvector of \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } d is proportional to \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } c Reciprocally there is also d is an eigenvector of \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } c is proportional to \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } d Reversing the change of coordinates we have that a is an eigenvector of \\Sigma _{XX} ^{ } \\Sigma _{XY} \\Sigma _{YY} ^{ } \\Sigma _{YX} b is an eigenvector of \\Sigma _{YY} ^{ } \\Sigma _{YX} \\Sigma _{XX} ^{ } \\Sigma _{XY} a is proportional to \\Sigma _{XX} ^{ } \\Sigma _{XY} b b is proportional to \\Sigma _{YY} ^{ } \\Sigma _{YX} a The canonical variables are defined by U = c' \\Sigma _{XX} ^{ } X = a' X V = d' \\Sigma _{YY} ^{ } Y = b' Y Implementation CCA can be computed using singular value decomposition on a correlation matrix It is available as a function in MATLAB as canoncorr R as cancor or in FactoMineR SAS as proc cancorr Scikit Learn Python as Cross decomposition Hypothesis testing Each row can be tested for significance with the following method Since the correlations are sorted saying that row i is zero implies all further correlations are also zero If we have p independent observations in a sample and \\widehat{\\rho}_i is the estimated correlation for i = \\dots \\min\\{mn\\} For the ith row the test statistic is \\chi ^ = \\left p \\frac{}{}m + n + \\right \\ln \\prod _ {j = i} ^{\\min\\{mn\\}} \\widehat{\\rho}_j^ which is asymptotically distributed as a chi squared with m i + n i + degrees of dom for large p Since all the correlations from \\min\\{mn\\} to p are logically zero and estimated that way also the product for the terms after this point is irrelevant Practical uses A typical use for canonical correlation in the experimental context is to take two sets of variables and see what is common amongst the two sets For example in psychological testing you could take two well established multidimensional personality tests such as the Minnesota Multiphasic Personality Inventory MMPI and the NEO By seeing how the MMPI factors relate to the NEO factors you could gain insight into what dimensions were common between the tests and how much variance was shared For example you might find that an extraversion or neuroticism dimension accounted for a substantial amount of shared variance between the two tests One can also use canonical correlation analysis to produce a model equation which relates two sets of variables for example a set of performance measures and a set of explanatory variables or a set of outputs and set of inputs Constraint restrictions can be imposed on such a model to ensure it reflects theoretical requirements or intuitively obvious conditions This type of model is known as a maximum correlation model Visualization of the results of canonical correlation is usually through bar plots of the coefficients of the two sets of variables for the pairs of canonical variates showing significant correlation Some authors suggest that they are best visualized by plotting them as heliographs a circular format with ray like bars with each half representing the two sets of variables Examples Let X = x_ with zero expected value ie \\operatorname{E}X= If Y = X ie X and Y are perfectly correlated then eg a= and b= so that the first and only in this example pair of canonical variables is U = X and V = Y =X If Y = X ie X and Y are perfectly anticorrelated then eg a= and b= so that the first and only in this example pair of canonical variables is U = X and V = Y =X We notice that in both cases U =V which illustrates that the canonical correlation analysis treats correlated and anticorrelated variables similarly Connection to principal angles Assuming that X = x_ \\dots x_n' and Y = y_ \\dots y_m' have zero expected values ie \\operatorname{E}X=\\operatorname{E}Y= their covariance matrices \\Sigma _{XX} =\\operatorname{Cov}XX = \\operatorname{E}[X X'] and \\Sigma _{YY} =\\operatorname{Cov}YY = \\operatorname{E}[Y Y'] can be viewed as Gram matrices in an inner product for the entries of X and Y correspondingly In this interpretation the random variables entries x_i of X and y_j of Y are treated as elements of a vector space with an inner product given by the covariance \\operatorname{cov}x_i y_j see Covariance#Relationship to inner products The definition of the canonical variables U and V is then equivalent to the definition of principal vectors for the pair of subspaces spanned by the entries of X and Y with respect to this inner product The canonical correlations \\operatorname{corr}UV is equal to the cosine of principal angles See also Generalized Canonical Correlation Multilinear subspace learning RV coefficient Principal angles Principal component analysis Regularized canonical correlation analysis Singular value decomposition Partial least squares regression References Ha rdle Wolfgang; Simar Le opold Canonical Correlation Analysis Applied Multivariate Statistical Analysis pp doi _ ISBN Knapp T R Canonical correlation analysis A general parametric significance testing system Psychological Bulletin  doi Hotelling H Relations Between Two Sets of Variates Biometrika doibiomet JSTOR Hsu D; Kakade S M; Zhang T A spectral algorithm for learning Hidden Markov Models PDF Journal of Computer and System Sciences arXiv doijjcss Huang S Y; Lee M H; Hsiao C K Nonlinear measures of association with kernel canonical correlation analysis and applications PDF Journal of Statistical Planning and Inference doijjspi Kanti V Mardia J T Kent and J M Bibby Multivariate Analysis Academic Press Tofallis C Model Building with Multiple Dependent Variables and Constraints Journal of the Royal Statistical Society Series D The Statistician  arXiv doi Degani A; Shafto M; Olson L Canonical Correlation Analysis Use of Composite Heliographs for Representing Multiple Patterns Diagrammatic Representation and Inference PDF Lecture Notes in Computer Science p doi_ ISBN External links Hardoon D R; Szedmak S; Shawe Taylor J Canonical Correlation Analysis An Overview with Application to Learning Methods Neural Computation  doi PMID A note on the ordinal canonical correlation analysis of two sets of ranking scores Also provides a FORTRAN program in J of Quantitative Economics pp Representation Constrained Canonical Correlation Analysis A Hybridization of Canonical Correlation and Principal Component Analyses Also provides a FORTRAN program in J of Applied Economic Sciences pp Retrieved from httpsenorgwindexphptitle=Canonical_correlation&oldid= Categories Covariance and correlationMultivariate statistics This page was last modified on April at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization"}]}
MapperParsingException[failed to parse]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@296d01e1; line: 1, column: 1260]];
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:156)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@296d01e1; line: 1, column: 1260]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.index.mapper.DocumentParser.createBuilderFromDynamicValue(DocumentParser.java:517)
	at org.elasticsearch.index.mapper.DocumentParser.parseDynamicValue(DocumentParser.java:619)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:444)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	... 18 more
[2016-10-26 11:31:54,101][INFO ][cluster.metadata         ] [node_petutor_01] [documents] create_mapping [concept]
[2016-10-26 11:31:54,585][DEBUG][action.bulk              ]  most likely to have generated the observed mixtures {\\displaystyle x} x from the unknown source signals {\\displaystyle s} s with pdf {\\displaystyle p_{s}} p_{s} then we need only find that {\\displaystyle \\mathbf {W} } \\mathbf {W} which maximizes the likelihood {\\displaystyle \\mathbf {LW} } \\mathbf{LW} The unmixing matrix that maximizes equation is known as the MLE of the optimal unmixing matrix It is common practice to use the log likelihood because this is easier to evaluate As the logarithm is a monotonic function the {\\displaystyle \\mathbf {W} } \\mathbf {W} that maximizes the function {\\displaystyle \\mathbf {LW} } \\mathbf{LW} also maximizes its logarithm {\\displaystyle \\ln \\mathbf {LW} } \\ln \\mathbf{LW} This allows us to take the logarithm of equation above which yields the log likelihood function {\\displaystyle \\ln \\mathbf {LW} =\\sum _{i}\\sum _{t}\\ln p_{s}w_{i}^{T}x_{t}+N\\ln |\\mathbf {W} |} \\ln \\mathbf{LW} =\\sum_{i}\\sum_{t} \\ln p_sw^T_ix_t + N\\ln|\\mathbf{W}| If we substitute a commonly used high Kurtosis model pdf for the source signals {\\displaystyle p_{s}= \ anhs^{}} p_s = \ anhs^ then we have {\\displaystyle \\ln \\mathbf {LW} ={ \\over N}\\sum _{i}^{M}\\sum _{t}^{N}\\ln \ anhw_{i}^{T}x_{t}^{}+\\ln |\\mathbf {W} |} \\ln \\mathbf{LW} ={ \\over N}\\sum_{i}^{M} \\sum_{t}^{N}\\ln \ anhw^T_i x_t ^ + \\ln |\\mathbf{W}| This matrix {\\displaystyle \\mathbf {W} } \\mathbf {W} that maximizes this function is the maximum likelihood estimation History and background[edit] The early general framework for independent component analysis was introduced by Jeanny H rault and Bernard Ans from then rejoined by Christian Jutten from and was most clearly stated by Pierre Comon in In Tony Bell and Terry Sejnowski introduced a fast and efficient ICA algorithm based on infomax a principle introduced by Ralph Linsker in There are many algorithms available in the literature which do ICA A largely used one including in industrial applications is the FastICA algorithm developed by Aapo Hyv rinen and Erkki Oja which uses the kurtosis as cost function Other examples are rather related to blind source separation where a more general approach is used For example one can drop the independence assumption and separate mutually correlated signals thus statistically dependent signals Sepp Hochreiter and J rgen Schmidhuber showed how to obtain non linear ICA or source separation as a by product of regularization Their method does not require a priori knowledge about the number of independent sources Applications[edit] ICA can be extended to analyze non physical signals For instance ICA has been applied to discover discussion topics on a bag of news list archives Some ICA applications are listed below Independent component analysis in EEGLAB optical Imaging of neurons neuronal spike sorting face recognition modeling receptive fields of primary visual neurons predicting stock market prices mobile phone communications color based detection of the ripeness of tomatoes removing artifacts such as eye blinks from EEG data See also[edit] Portal icon Machine learning portal Portal icon Statistics portal Blind deconvolution Factor analysis Hilbert spectrum Image processing Multilinear PCA Multilinear subspace learning Non negative matrix factorization NMF Nonlinear dimensionality reduction Projection pursuit Varimax rotation Notes[edit] ^ Jump up to a b Stone James V Independent component analysis a tutorial introduction Cambridge Mass [ua] MIT Press ISBN  Jump up ^ Aapo Hyvarinen Juha Karhunen ErkkiOja Independent component analysis st ed New York J Wiley ISBN  Jump up ^ Johan Himbergand Aapo Hyv rinen Independent Component Analysis For Binary Data An Experimental Study Proc Int Workshop on Independent Component Analysis and Blind Signal Separation ICA San Diego California Jump up ^ Huy Nguyen and Rong Zheng Binary Independent Component Analysis With or Mixtures IEEE Transactions on Signal Processing Vol Issue July pp Jump up ^ Painsky Amichai; Rosset Saharon; Feder Meir Generalized Binary Independent Component Analysis IEEE International Symposium on Information Theory ISIT Jump up ^ James V Stone; Independent Component Analysis A Tutorial Introduction The MIT Press Cambridge Massachusetts London England; ISBN  Jump up ^ Kruskal JB ; Toward a practical method which helps uncover the structure of a set of observations by finding the line transformation which optimizes a new index of condensation Pages of Milton RC & Nelder JA eds Statistical computation; New York Academic Press Jump up ^ Hyv rinen Aapo; Erkki Oja Independent Component AnalysisAlgorithms and Applications Neural Networks dois PMID Jump up ^ Independent component analysis [Reprinted] ed New York NY [ua] Wiley ISBN X |first= missing |last= in Authors list help Jump up ^ Hyv rinen Aapo New approximations of differential entropy for independent component analysis and projection pursuit Advances in Neural Information Processing Systems ^ Jump up to a b James V Stone; Independent Component Analysis A Tutorial Introduction The MIT Press Cambridge Massachusetts London England; ISBN  Jump up ^ H rault J; Ans B R seau de neurones synapses modifiables D codage de messages sensoriels composites par apprentissage non supervis et permanent Comptes Rendus de l'Acad mie des Sciences Paris S rie III Life Sciences Jump up ^ Ans B H rault J & Jutten C Architectures neuromim tiques adaptatives D tection de primitives Cognitiva Vol pp Paris CESTA Jump up ^ H rault J Jutten C & Ans B D tection de grandeurs primitives dans un message composite par une architecture de calcul neuromim tique en apprentissage non supervis Proceedings of the th Workshop Traitement du signal et ses applications Vol pp Nice France GRETSI Jump up ^ H rault J & Jutten C Space or time adaptive signal processing by neural networks models Intern Conf on Neural Networks for Computing pp Snowbird Utah USA Jump up ^ Pierre Comon Independent component analysis a new concept httpwwweceucsbeduwcslcoursesECEC_FMadhowcomonpdf Jump up ^ Brown GD; YamadaS; Sejnowski TJ Independent components analysis at the neural cocktail party Trends in neuroscience  dois Jump up ^ Lewicki MS Areview of methods for spike sorting detection and classification of neural action potentials Network Computation in neural systems Jump up ^ Barlett MS Face image analysis by unsupervised learning Boston Kluwer International Series on Engineering and Computer Science Jump up ^ Bell AJ; Sejnowski TJ The independent components of natural scenes are edge filters Vision Research  dois PMC PMID Jump up ^ Back AD; Weigend AS A first application of independent component analysis to extracting structure from stock returns International journal of neural systems  dois PMID Jump up ^ Hyvarinen A KarhunenJ & OjaE a Independent component analysis New York John Wiley and Sons Jump up ^ Polder G; van der Heijen FWAM Estimation of compound distribution in spectral images of tomatoes using independent component analysis Austrian Computer Society Jump up ^ Delorme A; Sejnowski T; Makeig S Enhanced detection of artifacts in EEG data using higher order statistics and independent component analysis NeuroImage  doijneuroimage References[edit] Comon Pierre Independent Component Analysis a new concept Signal Processing The original paper describing the concept of ICA Hyv rinen A; Karhunen J; Oja E Independent Component Analysis New York Wiley ISBN Introductory chapter Hyv rinen A; Oja E Independent Component Analysis Algorithms and Application Neural Networks Technical but pedagogical introduction Comon P; Jutten C Handbook of Blind Source Separation Independent Component Analysis and Applications Academic Press Oxford UK ISBN Lee T W Independent component analysis Theory and applications Boston Mass Kluwer Academic Publishers ISBN  Acharyya Ranjan A New Approach for Blind Source Separation of Convolutive Sources Wavelet Based Separation Using Shrinkage Function ISBN  ISBN this book focuses on unsupervised learning with Blind Source Separation External links[edit] What is independent component analysis by Aapo Hyv rinen Independent Component Analysis A Tutorial by Aapo Hyv rinen A Tutorial on Independent Component Analysis FastICA as a package for Matlab in R language C++ ICALAB Toolboxes for Matlab developed at RIKEN High Performance Signal Analysis Toolkit provides C++ implementations of FastICA and Infomax ICA toolbox Matlab tools for ICA with Bell Sejnowski Molgedey Schuster and mean field ICA Developed at DTU Demonstration of the cocktail party problem EEGLAB Toolbox ICA of EEG for Matlab developed at UCSD FMRLAB Toolbox ICA of fMRI for Matlab developed at UCSD Discussion of ICA used in a biomedical shape representation context FastICA CuBICA JADE and TDSEP algorithm for Python and more Group ICA Toolbox and Fusion ICA Toolbox Tutorial Using ICA for cleaning EEG signals Categories Signal processingData analysisTime series analysisStatistical modelsMultivariate statistics Navigation menu Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView history Search Go Main page Contents Featured content Current events Random article Donate to Wikipedia Wikipedia store Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Wikidata item Cite this page Printexport Create a book Download as PDF Printable version Languages Deutsch Espa ol Fran ais Italiano Polski Basa Sunda Svenska Edit links This page was last modified on July at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki"}]}
MapperParsingException[failed to parse [conceptDescription]]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@3ff84b77; line: 1, column: 8867]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:329)
	at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:311)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:438)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@3ff84b77; line: 1, column: 8867]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.common.xcontent.support.AbstractXContentParser.textOrNull(AbstractXContentParser.java:195)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateFieldForString(StringFieldMapper.java:372)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateField(StringFieldMapper.java:315)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:321)
	... 22 more
[2016-10-26 11:31:54,663][DEBUG][action.bulk              ]  and J rg Sander Its basic idea is similar to DBSCAN but it addresses one of DBSCAN's major weaknesses the problem of detecting meaningful clusters in data of varying density In order to do so the points of the database are linearly ordered such that points which are spatially closest become neighbors in the ordering Additionally a special distance is stored for each point that represents the density that needs to be accepted for a cluster in order to have both points belong to the same cluster This is represented as a dendrogram Contents [hide] Basic idea Pseudocode Extracting the clusters Complexity Extensions Availability References Basic idea Like DBSCAN OPTICS requires two parameters \\varepsilon which describes the maximum distance radius to consider and MinPts describing the number of points required to form a cluster A point p is a core point if at least MinPts points are found within its \\varepsilon neighborhood N_\\varepsilonp Contrary to DBSCAN OPTICS also considers points that are part of a more densely packed cluster so each point is assigned a core distance that describes the distance to the MinPtsth closest point \ ext{core dist}_{\\varepsilonMinPts}p=\\begin{cases}\ ext{UNDEFINED} & \ ext{if } |N_\\varepsilonp| < MinPts\\\\ MinPts\ ext{ th smallest distance to } N_\\varepsilonp & \ ext{otherwise}\\end{cases} The reachability distance of another point o from a point p is either the distance between o and p or the core distance of p whichever is bigger \ ext{reachability dist}_{\\varepsilonMinPts}op = \\begin{cases}\ ext{UNDEFINED} & \ ext{if } |N_\\varepsilonp| < MinPts\\\\ \\max\ ext{core dist}_{\\varepsilonMinPts}p \ ext{dist}po & \ ext{otherwise}\\end{cases} If p and o are nearest neighbors this is the \\varepsilon' < \\varepsilon we need to assume in order to have p and o belong to the same cluster Both the core distance and the reachability distance are undefined if no sufficiently dense cluster wrt \\varepsilon is available Given a sufficiently large \\varepsilon this will never happen but then every \\varepsilon neighborhood query will return the entire database resulting in On^ runtime Hence the \\varepsilon parameter is required to cut off the density of clusters that is no longer considered to be interesting and to speed up the algorithm this way The parameter \\varepsilon is strictly speaking not necessary It can simply be set to the maximum possible value When a spatial index is available however it does play a practical role with regards to complexity It is often claimed that OPTICS abstracts from DBSCAN by removing this parameter at least to the extent of only having to give the maximum value Pseudocode The basic approach of OPTICS is similar to DBSCAN but instead of maintaining a set of known but so far unprocessed cluster members a priority queue eg using an indexed heap is used OPTICSDB eps MinPts  for each point p of DB preachability distance = UNDEFINED  for each unprocessed point p of DB N = getNeighborsp eps mark p as processed output p to the ordered list if core distancep eps Minpts = UNDEFINED Seeds = empty priority queue updateN p Seeds eps Minpts for each next q in Seeds N' = getNeighborsq eps mark q as processed output q to the ordered list if core distanceq eps Minpts = UNDEFINED  updateN' q Seeds eps Minpts In update the priority queue Seeds is updated with the \\varepsilon neighborhood of p and q respectively updateN p Seeds eps Minpts  coredist = core distancep eps MinPts  for each o in N if o is not processed new reach dist = maxcoredist distpo if oreachability distance == UNDEFINED o is not in Seeds  oreachability distance = new reach dist  Seedsinserto new reach dist else o in Seeds check for improvement  if new reach dist < oreachability distance oreachability distance = new reach dist Seedsmove upo new reach dist OPTICS hence outputs the points in a particular ordering annotated with their smallest reachability distance in the original algorithm the core distance is also exported but this is not required for further processing Extracting the clusters OPTICSsvg Using a reachability plot a special kind of dendrogram the hierarchical structure of the clusters can be obtained easily It is a D plot with the ordering of the points as processed by OPTICS on the x axis and the reachability distance on the y axis Since points belonging to a cluster have a low reachability distance to their nearest neighbor the clusters show up as valleys in the reachability plot The deeper the valley the denser the cluster The image above illustrates this concept In its upper left area a synthetic example data set is shown The upper right part visualizes the spanning tree produced by OPTICS and the lower part shows the reachability plot as computed by OPTICS Colors in this plot are labels and not computed by the algorithm; but it is well visible how the valleys in the plot correspond to the clusters in above data set The yellow points in this image are considered noise and no valley is found in their reachability plot They will usually not be assigned to clusters except the omnipresent all data cluster in a hierarchical result Extracting clusters from this plot can be done manually by selecting a range on the x axis after visual inspection by selecting a threshold on the y axis the result will then be similar to a DBSCAN clustering result with the same \\varepsilon and minPts parameters; here a value of may yield good results or by different algorithms that try to detect the valleys by steepness knee detection or local maxima Clusterings obtained this way usually are hierarchical and cannot be achieved by a single DBSCAN run Complexity Like DBSCAN OPTICS processes each point once and performs one \\varepsilon neighborhood query during this processing Given a spatial index that grants a neighborhood query in O\\log n runtime an overall runtime of On \\cdot \\log n is obtained The authors of the original OPTICS paper report an actual constant slowdown factor of compared to DBSCAN Note that the value of \\varepsilon might heavily influence the cost of the algorithm since a value too large might raise the cost of a neighborhood query to linear complexity In particular choosing \\varepsilon > \\max_{xy} dxy larger than the maximum distance in the data set is possible but will obviously lead to quadratic complexity since every neighborhood query will return the full data set Even when no spatial index is available this comes at additional cost in managing the heap Therefore \\varepsilon should be chosen appropriately for the data set Extensions OPTICS OF is an outlier detection algorithm based on OPTICS The main use is the extraction of outliers from an existing run of OPTICS at low cost compared to using a different outlier detection method DeLi Clu Density Link Clustering combines ideas from single linkage clustering and OPTICS eliminating the \\varepsilon parameter and offering performance improvements over OPTICS HiSC is a hierarchical subspace clustering axis parallel method based on OPTICS HiCO is a hierarchical correlation clustering algorithm based on OPTICS DiSH is an improvement over HiSC that can find more complex hierarchies FOPTICS is a faster implementation using random projections Availability Java implementations of OPTICS OPTICS OF DeLi Clu HiSC HiCO and DiSH are available in the ELKI data mining framework with index acceleration for several distance functions and with automatic cluster extraction using the extraction method Other Java implementations include SPMF and in the Weka extensions no support for cluster extraction The Francis Crick Institute provides an implementation in C MathBio serverGitHub with R bindings but without index support The R package dbscan includes a C++ implementation of OPTICS using a kd tree for index acceleration for Euclidean distance only References Mihael Ankerst Markus M Breunig Hans Peter Kriegel J rg Sander OPTICS Ordering Points To Identify the Clustering Structure ACM SIGMOD international conference on Management of data ACM Press pp Martin Ester Hans Peter Kriegel J rg Sander Xiaowei Xu Evangelos Simoudis Jiawei Han Usama M Fayyad eds A density based algorithm for discovering clusters in large spatial databases with noise Proceedings of the Second International Conference on Knowledge Discovery and Data Mining KDD AAAI Press pp ISBN  Markus M Breunig Hans Peter Kriegel Raymond T Ng and J rg Sander OPTICS OF Identifying Local Outliers Principles of Data Mining and Knowledge Discovery Springer Verlag pp doib ISBN Achtert E; B hm C; Kr ger P DeLi Clu Boosting Robustness Completeness Usability and Efficiency of Hierarchical Clustering by a Closest Pair Ranking LNCS Advances in Knowledge Discovery and Data Mining Lecture Notes in Computer Science doi_ ISBN Achtert E; B hm C; Kriegel H P; Kr ger P; M ller Gorman I; Zimek A Finding Hierarchies of Subspace Clusters LNCS Knowledge Discovery in Databases PKDD Lecture Notes in Computer Science doi_ ISBN Achtert E; B hm C; Kr ger P; Zimek A Mining Hierarchies of Correlation Clusters Proc th International Conference on Scientific and Statistical Database Management SSDBM doiSSDBM ISBN  Achtert E; B hm C; Kriegel H P; Kr ger P; M ller Gorman I; Zimek A Detection and Visualization of Subspace Cluster Hierarchies LNCS Advances in Databases Concepts Systems and Applications Lecture Notes in Computer Science doi _ ISBN Schneider Johannes; Vlachos Michail Fast parameterless density based clustering via random projections nd ACM International Conference on Information and Knowledge ManagementCIKM ACM Retrieved from httpsenorgwindexphptitle=OPTICS_algorithm&oldid= Categories Data clustering algorithms This page was last modified on March at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization"}]}
MapperParsingException[failed to parse [conceptDescription]]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@55c0f4ec; line: 1, column: 1431]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:329)
	at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:311)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:438)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@55c0f4ec; line: 1, column: 1431]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.common.xcontent.support.AbstractXContentParser.textOrNull(AbstractXContentParser.java:195)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateFieldForString(StringFieldMapper.java:372)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateField(StringFieldMapper.java:315)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:321)
	... 22 more
[2016-10-26 11:31:54,641][DEBUG][action.bulk              ]  using RNN encoder decoder for statistical machine translation in Proceedings of the Empiricial Methods in Natural Language Processing EMNLP Oct Cho Kyunghyun Aaron Courville and Yoshua Bengio Describing Multimedia Content using Attention based Encoder Decoder Networks arXiv Cho Youngmin Kernel Methods for Deep Learning PDF Scholkopf B; Smola Alexander Nonlinear component analysis as a kernel eigenvalue problem Neural computation doi L Deng G Tur X He and D Hakkani Tur Use of Kernel Deep Convex Networks and End To End Learning for Spoken Language Understanding Proc IEEE Workshop on Spoken Language Technologies TIMIT Acoustic Phonetic Continuous Speech Corpus Linguistic Data Consortium Philadelphia Abdel Hamid O; et al Convolutional Neural Networks for Speech Recognition IEEEACM Transactions on Audio Speech and Language Processing  doitaslp Deng L; Platt J Ensemble Deep Learning for Speech Recognition Proc Interspeech Yu D; Deng L Roles of Pre Training and Fine Tuning in Context Dependent DBN HMMs for Real World Speech Recognition NIPS Workshop on Deep Learning and Unsupervised Feature Learning Deng L Li J Huang J Yao K Yu D Seide F et al Recent Advances in Deep Learning for Speech Research at Microsoft ICASSP Deng L; Li Xiao Machine Learning Paradigms for Speech Recognition An Overview IEEE Transactions on Audio Speech and Language Processing doitasl L Deng M Seltzer D Yu A Acero A Mohamed and G Hinton Binary Coding of Speech Spectrograms Using a Deep Auto encoder Interspeech Z Tuske P Golik R Schl ter and H Ney Acoustic Modeling with Deep Neural Networks Using Raw Time Signal for LVCSR Interspeech McMillan R How Skype Used AI to Build Its Amazing New Language Translator Wire Dec Hannun et al Deep Speech Scaling up end to end speech recognition arXiv Ron Schneiderman Accuracy Apps Advance Speech Recognition  Interviews with Vlad Sejnoha and Li Deng IEEE Signal Processing Magazine Jan httpyannlecuncomexdbmnist D Ciresan U Meier J Schmidhuber Multi column Deep Neural Networks for Image Classification Technical Report No IDSIA D Ciresan A Giusti LM Gambardella J Schmidhuber Mitosis Detection in Breast Cancer Histology Images using Deep Neural Networks Proceedings MICCAI Vinyals et al Show and Tell A Neural Image Caption Generator arXiv Fang et al From Captions to Visual Concepts and Back arXiv Kiros et al Unifying Visual Semantic Embeddings with Multimodal Neural Language Models arXiv Zhong S; Liu Y; Liu Y Bilinear Deep Learning for Image Classification Proceedings of the th ACM International Conference on Multimedia Nvidia Demos a Car Computer Trained with Deep Learning  David Talbot MIT Technology Review Y Bengio R Ducharme P Vincent C Jauvin A Neural Probabilistic Language Model Journal of Machine Learning Research Goldberg Yoav; Levy Omar wordvec Explained Deriving Mikolov et al s Negative Sampling Word Embedding Method PDF Arxiv Retrieved October Socher Richard; Manning Christopher Deep Learning for NLP PDF Retrieved October Socher Richard; Bauer John; Manning Christopher; Ng Andrew Parsing With Compositional Vector Grammars PDF Proceedings of the ACL conference Socher Richard Recursive Deep Models for Semantic Compositionality Over a Sentiment Treebank PDF EMNLP Y Shen X He J Gao L Deng and G Mesnil A Latent Semantic Model with Convolutional Pooling Structure for Information Retrieval Proc CIKM P Huang X He J Gao L Deng A Acero and L Heck Learning Deep Structured Semantic Models for Web Search using Clickthrough Data Proc CIKM Mesnil G Dauphin Y Yao K Bengio Y Deng L Hakkani Tur D He X Heck L Tur G Yu D and Zweig G Using recurrent neural networks for slot filling in spoken language understanding IEEE Transactions on Audio Speech and Language Processing pp J Gao X He W Yih and L Deng Learning Continuous Phrase Representations for Translation Modeling Proc ACL J Gao P Pantel M Gamon X He L Deng Modeling Interestingness with Deep Neural Networks Proc EMNLP J Gao X He L Deng Deep Learning for Natural Language Processing Theory and Practice Tutorial CIKM Arrowsmith J; Miller P Trial watch Phase II and phase III attrition rates Nature Reviews Drug Discovery doinrd PMID Verbist B; Klambauer G; Vervoort L; Talloen W; The Qstar Consortium; Shkedy Z; Thas O; Bender A; G hlmann H W; Hochreiter S Using transcriptomics to guide lead optimization in drug discovery projects Lessons learned from the QSTAR project Drug Discovery Today doijdrudis PMID Announcement of the winners of the Merck Molecular Activity Challenge httpswwwkagglecomcMerckActivitydetailswinners Dahl G E; Jaitly N; & Salakhutdinov R Multi task Neural Networks for QSAR Predictions ArXiv Toxicology in the st century Data Challenge httpstripodnihgovtoxchallengeleaderboardjsp NCATS Announces Tox Data Challenge Winners httpwwwncatsnihgovnews and eventsfeaturestox challenge winnershtml Unterthiner T; Mayr A; Klambauer G; Steijaert M; Ceulemans H; Wegner J K; & Hochreiter S Deep Learning as an Opportunity in Virtual Screening Workshop on Deep Learning and Representation Learning NIPS Unterthiner T; Mayr A; Klambauer G; & Hochreiter S Toxicity Prediction using Deep Learning ArXiv Ramsundar B; Kearnes S; Riley P; Webster D; Konerding D;& Pande V Massively Multitask Networks for Drug Discovery ArXiv Wallach Izhar; Dzamba Michael; Heifets Abraham  AtomNet A Deep Convolutional Neural Network for Bioactivity Prediction in Structure based Drug Discovery arXiv Toronto startup has a faster way to discover effective medicines The Globe and Mail Retrieved  Startup Harnesses Supercomputers to Seek Cures KQED Future of You Retrieved httpwwwtheglobeandmailcomreport on businesssmall businessstarting outtoronto startup has a faster way to discover effective medicinesarticle%d%and%multiple%sclerosis%%b Tkachenko Yegor Autonomous CRM Control via CLV Approximation with Deep Reinforcement Learning in Discrete and Continuous Action Space April arXivorg httparxivorgabs Van den Oord Aaron Sander Dieleman and Benjamin Schrauwen Deep content based music recommendation Advances in Neural Information Processing Systems Elkahky Ali Mamdouh Yang Song and Xiaodong He A Multi View Deep Learning Approach for Cross Domain User Modeling in Recommendation Systems Proceedings of the th International Conference on World Wide Web International World Wide Web Conferences Steering Committee Davide Chicco Peter Sadowski and Pierre Baldi Deep autoencoder neural networks for gene ontology annotation predictions Proceedings of the th ACM Conference on Bioinformatics Computational Biology and Health Informatics ACM Utgoff P E; Stracuzzi D J Many layered learning Neural Computation doi J Elman et al Rethinking Innateness Shrager J; Johnson MH Dynamic plasticity influences the emergence of function in a simple cortical array Neural Networks  doi Quartz SR; Sejnowski TJ The neural basis of cognitive development A constructivist manifesto Behavioral and Brain Sciences  doisx S Blakeslee In brain's early growth timetable may be critical The New York Times Science Section pp B B {BUFILL} E Bufill J Agusti R Blesa Human neoteny revisited The case of synaptic plasticity American Journal of Human Biology pp J Shrager and M H Johnson Timing in the development of cortical function A computational approach In B Julesz and I Kovacs Eds Maturational windows and adult cortical plasticity D Hernandez The Man Behind the Google Brain Andrew Ng and the Quest for the New AI httpwwwwiredcomwiredenterpriseneuro artificial intelligenceall Wired May C Metz Facebook's 'Deep Learning' Guru Reveals the Future of AI httpwwwwiredcomwiredenterprisefacebook yann lecun qa Wired December V Vapnik researchfacebookcom Google AI algorithm masters ancient game of Go Nature News & Comment Retrieved Silver David; Huang Aja; Maddison Chris J; Guez Arthur; Sifre Laurent; van den Driessche George; Schrittwieser Julian; Antonoglou Ioannis; Panneershelvam Veda  Mastering the game of Go with deep neural networks and tree search Nature  doinature ISSN A Google DeepMind Algorithm Uses Deep Learning and More to Master the Game of Go | MIT Technology Review MIT Technology Review Retrieved  Blippar Demonstrates New Real Time Augmented Reality App TechCrunch G Marcus Is Deep Learning a Revolution in Artificial Intelligence The New Yorker November Smith G W March Art and Artificial Intelligence ArtEnt Retrieved March Knight Will November Tools point to African origin for human behaviour New Scientist Retrieved October Alexander Mordvintsev Christopher Olah and Mike Tyka June Inceptionism Going Deeper into Neural Networks Google Research Blog Retrieved June Alex Hern June Yes androids do dream of electric sheep The Guardian Retrieved June Ben Goertzel Are there Deep Reasons Underlying the Pathologies of Today's Deep Learning Algorithms Url httpgoertzelorgDeepLearning_vpdf Nguyen Anh Jason Yosinski and Jeff Clune Deep Neural Networks are Easily Fooled High Confidence Predictions for Unrecognizable Images arXiv Szegedy Christian et al Intriguing properties of neural networks arXiv Zhu SC; Mumford D A stochastic grammar of images Found Trends Comput Graph Vis  doi Miller G A and N Chomsky Pattern conception Paper for Conference on pattern detection University of Michigan Jason Eisner Deep Learning of Recursive Structure Grammar Induction httptechtalkstvtalksdeep learning of recursive structure grammar induction CNTK on Github Deeplearningj on Github Dean Jeff; Monga Rajat; et al November TensorFlow Large scale machine learning on heterogeneous systems PDF TensorFloworg Google Research Retrieved November Apache SINGA Website External links Deep Learning Libraries by Language Retrieved from httpsenorgwindexphptitle=Deep_learning&oldid= Categories Deep learning This page was last modified on May at Text is available under the Creative Commons Attribution ShareAlike License; additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization"}]}
MapperParsingException[failed to parse [conceptDescription]]; nested: JsonParseException[Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@4f038322; line: 1, column: 39776]];
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:329)
	at org.elasticsearch.index.mapper.DocumentParser.parseObjectOrField(DocumentParser.java:311)
	at org.elasticsearch.index.mapper.DocumentParser.parseValue(DocumentParser.java:438)
	at org.elasticsearch.index.mapper.DocumentParser.parseObject(DocumentParser.java:264)
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:124)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardIndexOperation(TransportShardBulkAction.java:327)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:120)
	at org.elasticsearch.action.bulk.TransportShardBulkAction.shardOperationOnPrimary(TransportShardBulkAction.java:68)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unrecognized character escape ' ' (code 32)
 at [Source: org.elasticsearch.common.io.stream.InputStreamStreamInput@4f038322; line: 1, column: 39776]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1702)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:558)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._handleUnrecognizedCharacterEscape(ParserMinimalBase.java:535)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(UTF8StreamJsonParser.java:3249)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString2(UTF8StreamJsonParser.java:2510)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(UTF8StreamJsonParser.java:2465)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(UTF8StreamJsonParser.java:315)
	at org.elasticsearch.common.xcontent.json.JsonXContentParser.text(JsonXContentParser.java:84)
	at org.elasticsearch.common.xcontent.support.AbstractXContentParser.textOrNull(AbstractXContentParser.java:195)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateFieldForString(StringFieldMapper.java:372)
	at org.elasticsearch.index.mapper.core.StringFieldMapper.parseCreateField(StringFieldMapper.java:315)
	at org.elasticsearch.index.mapper.FieldMapper.parse(FieldMapper.java:321)
	... 22 more
[2016-10-26 13:08:24,938][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][19306][54] duration [8.7s], collections [1]/[9.6s], total [8.7s]/[9.2s], memory [107.5mb]->[39.5mb]/[990.7mb], all_pools {[young] [68.3mb]->[600.6kb]/[266.2mb]}{[survivor] [3.2mb]->[2.6mb]/[33.2mb]}{[old] [35.9mb]->[36.3mb]/[691.2mb]}
