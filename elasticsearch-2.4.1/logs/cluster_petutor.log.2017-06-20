[2017-06-20 09:33:04,862][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][137381][235] duration [1.3s], collections [1]/[2.4s], total [1.3s]/[6.5m], memory [449.6mb]->[182.7mb]/[990.7mb], all_pools {[young] [265.6mb]->[1.8mb]/[266.2mb]}{[survivor] [9.2mb]->[6mb]/[33.2mb]}{[old] [174.7mb]->[174.7mb]/[691.2mb]}
[2017-06-20 17:23:49,719][INFO ][cluster.metadata         ] [node_petutor_01] [data] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings []
[2017-06-20 17:23:51,749][INFO ][cluster.routing.allocation] [node_petutor_01] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[data][4], [data][4]] ...]).
[2017-06-20 17:23:51,994][INFO ][cluster.metadata         ] [node_petutor_01] [data] create_mapping [chapter]
[2017-06-20 17:24:14,779][INFO ][cluster.metadata         ] [node_petutor_01] [data] create_mapping [concept]
[2017-06-20 18:00:23,627][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][155591][239] duration [1s], collections [1]/[1.3s], total [1s]/[6.5m], memory [445.9mb]->[183.8mb]/[990.7mb], all_pools {[young] [265.6mb]->[1.4mb]/[266.2mb]}{[survivor] [5.5mb]->[4mb]/[33.2mb]}{[old] [174.7mb]->[178.3mb]/[691.2mb]}
[2017-06-20 18:00:26,301][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][155592][240] duration [1.7s], collections [1]/[2.6s], total [1.7s]/[6.5m], memory [183.8mb]->[230.4mb]/[990.7mb], all_pools {[young] [1.4mb]->[24.9mb]/[266.2mb]}{[survivor] [4mb]->[27mb]/[33.2mb]}{[old] [178.3mb]->[178.3mb]/[691.2mb]}
[2017-06-20 18:00:30,447][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][155593][241] duration [3.8s], collections [1]/[4.1s], total [3.8s]/[6.6m], memory [230.4mb]->[231.9mb]/[990.7mb], all_pools {[young] [24.9mb]->[3.4mb]/[266.2mb]}{[survivor] [27mb]->[9.2mb]/[33.2mb]}{[old] [178.3mb]->[219.3mb]/[691.2mb]}
[2017-06-20 18:00:35,952][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][155594][242] duration [5.2s], collections [1]/[5.5s], total [5.2s]/[6.7m], memory [231.9mb]->[286.8mb]/[990.7mb], all_pools {[young] [3.4mb]->[4.2mb]/[266.2mb]}{[survivor] [9.2mb]->[7.3mb]/[33.2mb]}{[old] [219.3mb]->[275.2mb]/[691.2mb]}
[2017-06-20 18:00:43,395][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][155596][243] duration [6s], collections [1]/[6.4s], total [6s]/[6.8m], memory [463.2mb]->[357.2mb]/[990.7mb], all_pools {[young] [180.7mb]->[4.4mb]/[266.2mb]}{[survivor] [7.3mb]->[5.6mb]/[33.2mb]}{[old] [275.2mb]->[347mb]/[691.2mb]}
[2017-06-20 18:00:56,551][WARN ][monitor.jvm              ] [node_petutor_01] [gc][old][155597][48] duration [12.9s], collections [1]/[13.1s], total [12.9s]/[56.1s], memory [357.2mb]->[216.7mb]/[990.7mb], all_pools {[young] [4.4mb]->[88mb]/[266.2mb]}{[survivor] [5.6mb]->[0b]/[33.2mb]}{[old] [347mb]->[128.6mb]/[691.2mb]}
[2017-06-20 18:01:01,589][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][155598][245] duration [4.8s], collections [1]/[5s], total [4.8s]/[6.8m], memory [216.7mb]->[324.1mb]/[990.7mb], all_pools {[young] [88mb]->[4.9mb]/[266.2mb]}{[survivor] [0b]->[6.8mb]/[33.2mb]}{[old] [128.6mb]->[312.3mb]/[691.2mb]}
[2017-06-20 18:01:01,825][WARN ][http.netty               ] [node_petutor_01] Caught exception while handling client http traffic, closing connection [id: 0x36283802, /0:0:0:0:0:0:0:1:54430 => /0:0:0:0:0:0:0:1:9201]
org.jboss.netty.handler.codec.frame.TooLongFrameException: HTTP content length exceeded 104857600 bytes.
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:169)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2017-06-20 18:05:33,741][INFO ][cluster.metadata         ] [node_petutor_01] [data] update_mapping [concept]
[2017-06-20 18:06:24,693][INFO ][cluster.metadata         ] [node_petutor_01] [data] update_mapping [chapter]
[2017-06-20 18:07:12,879][INFO ][cluster.metadata         ] [node_petutor_01] [data] creating index, cause [auto(index api)], templates [], shards [5]/[1], mappings []
[2017-06-20 18:07:13,687][INFO ][cluster.routing.allocation] [node_petutor_01] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[data][4]] ...]).
[2017-06-20 18:07:13,818][INFO ][cluster.metadata         ] [node_petutor_01] [data] create_mapping [chapter]
[2017-06-20 18:07:16,898][INFO ][cluster.metadata         ] [node_petutor_01] [data] create_mapping [concept]
[2017-06-20 18:08:13,817][DEBUG][action.index             ] ulating  covariance matrix subsequent principal components can  computed  subtracting component  see gramschmidt   repeating  algorithm  find  next principal component however  simple approach   numerically stable     small number  principal components  required  imprecisions   calculations will additively affect  estimates  subsequent principal components  advanced methods build   basic idea    closely related lanczos algorithm one way  compute  eigenvalue  corresponds   principal component   measure  difference  meansquareddistance   rows   centroid    subtracting   principal component  eigenvalue  corresponds   component   removed  equal   difference  nipals method nonlinear iterative partial least squares nipals   algorithm  computing  first  components   principal component  partial least squares analysis  veryhighdimensional datasets    generated   omics sciences eg genomics metabolomics   usually  necessary  compute  first  pcs  nonlinear iterative partial least squares nipals algorithm calculates t  w  x  outer product tw can   subtracted  x leaving  residual matrix e  can   used  calculate subsequent pcs  results   dramatic reduction  computational time since calculation   covariance matrix  avoided however  large data matrices  matrices    high degree  column collinearity nipals suffers  loss  orthogonality due  machine precision limitations accumulated   iteration step  gramschmidt gs reorthogonalization algorithm  applied    scores   loadings   iteration step  eliminate  loss  orthogonality onlinesequential estimation   online  streaming situation  data arriving piece  piece rather   stored   single batch   useful  make  estimate   pca projection  can  updated sequentially  can  done efficiently  requires different algorithms pca  qualitative variables  pca   common   want  introduce qualitative variables  supplementary elements  example many quantitative variables   measured  plants   plants  qualitative variables  available   example  species    plant belongs  data  subjected  pca  quantitative variables  analyzing  results   natural  connect  principal components   qualitative variable species    following results  produced  results    called introducing  qualitative variable  supplementary element  procedure  detailed   husson l  pag s  pag s  software offer  option   automatic way    case  spad  historically following  work  ludovic lebart   first  propose  option   r package factominer applications interest rate derivatives portfolios principal component analysis can  directly applied   risk management  interest rate derivatives portfolios trading multiple swap instruments   usually  function   market quotable swap instruments  sought   reduced  usually  principal components representing  path  interest rates   macro basis converting risks   represented    factor loadings  multipliers provides assessments  understanding beyond  available  simply collectively viewing risks  individual buckets neuroscience  variant  principal components analysis  used  neuroscience  identify  specific properties   stimulus  increase  neurons probability  generating  action potential  technique  known  spiketriggered covariance analysis   typical application  experimenter presents  white noise process   stimulus usually either   sensory input   test subject    current injected directly   neuron  records  train  action potentials  spikes produced   neuron   result presumably certain features   stimulus make  neuron  likely  spike  order  extract  features  experimenter calculates  covariance matrix   spiketriggered ensemble  set   stimuli defined  discretized   finite time window typically   order  ms  immediately preceded  spike  eigenvectors   difference   spiketriggered covariance matrix   covariance matrix   prior stimulus ensemble  set   stimuli defined    length time window  indicate  directions   space  stimuli along   variance   spiketriggered ensemble differed       prior stimulus ensemble specifically  eigenvectors   largest positive eigenvalues correspond   directions along   variance   spiketriggered ensemble showed  largest positive change compared   variance   prior since    directions   varying  stimulus led   spike   often good approximations   sought  relevant stimulus features  neuroscience pca  also used  discern  identity   neuron   shape   action potential spike sorting   important procedure  extracellular recording techniques often pick  signals    one neuron  spike sorting one first uses pca  reduce  dimensionality   space  action potential waveforms   performs clustering analysis  associate specific action potentials  individual neurons pca   dimension reduction technique  particularly suited  detect coordinated activities  large neuronal ensembles    used  determining collective variables ie order parameters  phase transitions   brain relation  pca  kmeans clustering   asserted    relaxed solution  means clustering specified   cluster indicators  given   principal components   pca subspace spanned   principal directions  identical   cluster centroid subspace however  pca   useful relaxation  kmeans clustering    new result see  example    straightforward  uncover counterexamples   statement   cluster centroid subspace  spanned   principal directions relation  pca  factor analysis principal component analysis creates variables   linear combinations   original variables  new variables   property   variables   orthogonal  principal components can  used  find clusters   set  data pca   variancefocused approach seeking  reproduce  total variable variance   components reflect  common  unique variance   variable pca  generally preferred  purposes  data reduction ie translating variable space  optimal factor space     goal   detect  latent construct  factors factor analysis  similar  principal component analysis   factor analysis also involves linear combinations  variables different  pca factor analysis   correlationfocused approach seeking  reproduce  intercorrelations among variables    factors represent  common variance  variables excluding unique variance  terms   correlation matrix  corresponds  focusing  explaining  offdiagonal terms ie shared covariance  pca focuses  explaining  terms  sit   diagonal however   side result  trying  reproduce  ondiagonal terms pca also tends  fit relatively well  offdiagonal correlations results given  pca  factor analysis   similar   situations     always  case     problems   results  significantly different factor analysis  generally used   research purpose  detecting data structure ie latent constructs  factors  causal modeling correspondence analysis correspondence analysis ca  developed  jeanpaul benz cri   conceptually similar  pca  scales  data    nonnegative   rows  columns  treated equivalently   traditionally applied  contingency tables ca decomposes  chisquared statistic associated   table  orthogonal factors  ca   descriptive technique  can  applied  tables    chisquared statistic  appropriate   several variants  ca  available including detrended correspondence analysis  canonical correspondence analysis one special extension  multiple correspondence analysis  may  seen   counterpart  principal component analysis  categorical data generalizations nonlinear generalizations    modern methods  nonlinear dimensionality reduction find  theoretical  algorithmic roots  pca  kmeans pearsons original idea   take  straight line  plane  will   best fit   set  data points principal curves  manifolds give  natural geometric framework  pca generalization  extend  geometric interpretation  pca  explicitly constructing  embedded manifold  data approximation   encoding using standard geometric projection onto  manifold    illustrated  fig see also  elastic map algorithm  principal geodesic analysis another popular generalization  kernel pca  corresponds  pca performed   reproducing kernel hilbert space associated   positive definite kernel multilinear generalizations  multilinear subspace learning pca  generalized  multilinear pca mpca  extracts features directly  tensor representations mpca  solved  performing pca   mode   tensor iteratively mpca   applied  face recognition gait recognition etc mpca   extended  uncorrelated mpca nonnegative mpca  robust mpca higher order nway principal component analysis may  performed  models   tucker decomposition parafac multiple factor analysis coinertia analysis statis  distatis robustness weighted pca  pca finds  mathematically optimal method   minimizing  squared error   sensitive  outliers   data  produce large errors pca tries  avoid  therefore  common practice  remove outliers  computing pca however   contexts outliers can  difficult  identify  example  data mining algorithms like correlation clustering  assignment  points  clusters  outliers   known beforehand  recently proposed generalization  pca based   weighted pca increases robustness  assigning different weights  data objects based   estimated relevancy robust pca via decomposition  lowrank  sparse matrices robust principal component analysis rpca   modification   widely used statistical procedure principal component analysis pca  works well  respect  grossly corrupted observations sparse pca  particular disadvantage  pca    principal components  usually linear combinations   input variables sparse pca overcomes  disadvantage  finding linear combinations  contain just   input variables similar techniques independent component analysis independent component analysis ica  directed  similar problems  principal component analysis  finds additively separable components rather  successive approximations network component analysis given  matrix formula  tries  decompose   two matrices   formula  key difference  techniques   pca  ica      entries  formula  constrained    formula  termed  regulatory layer   general   decomposition can  multiple solutions  prove    following conditions  satisfied   decomposition  unique   multiplication   scalar\r\n"}
]}] on [[data][1]]
MapperParsingException[failed to parse]; nested: IllegalArgumentException[Malformed content, found extra data after parsing: START_OBJECT];
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:156)
	at org.elasticsearch.index.mapper.DocumentMapper.parse(DocumentMapper.java:309)
	at org.elasticsearch.index.shard.IndexShard.prepareIndex(IndexShard.java:580)
	at org.elasticsearch.index.shard.IndexShard.prepareIndexOnPrimary(IndexShard.java:559)
	at org.elasticsearch.action.index.TransportIndexAction.prepareIndexOperationOnPrimary(TransportIndexAction.java:211)
	at org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(TransportIndexAction.java:223)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:157)
	at org.elasticsearch.action.index.TransportIndexAction.shardOperationOnPrimary(TransportIndexAction.java:66)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryPhase.doRun(TransportReplicationAction.java:657)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:287)
	at org.elasticsearch.action.support.replication.TransportReplicationAction$PrimaryOperationTransportHandler.messageReceived(TransportReplicationAction.java:279)
	at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:77)
	at org.elasticsearch.transport.TransportService$4.doRun(TransportService.java:376)
	at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Malformed content, found extra data after parsing: START_OBJECT
	at org.elasticsearch.index.mapper.DocumentParser.parseDocument(DocumentParser.java:141)
	... 17 more
[2017-06-20 18:08:59,333][INFO ][cluster.metadata         ] [node_petutor_01] [data] update_mapping [concept]
[2017-06-20 18:27:26,654][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][157171][247] duration [1.3s], collections [1]/[1.5s], total [1.3s]/[6.9m], memory [575.7mb]->[336.5mb]/[990.7mb], all_pools {[young] [251.3mb]->[2.8mb]/[266.2mb]}{[survivor] [12mb]->[21.3mb]/[33.2mb]}{[old] [312.3mb]->[312.3mb]/[691.2mb]}
[2017-06-20 18:27:28,920][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][157172][248] duration [1.8s], collections [1]/[2.2s], total [1.8s]/[6.9m], memory [336.5mb]->[364.9mb]/[990.7mb], all_pools {[young] [2.8mb]->[8mb]/[266.2mb]}{[survivor] [21.3mb]->[18.6mb]/[33.2mb]}{[old] [312.3mb]->[338.2mb]/[691.2mb]}
[2017-06-20 18:27:31,911][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][157173][249] duration [2.7s], collections [1]/[2.9s], total [2.7s]/[6.9m], memory [364.9mb]->[403.4mb]/[990.7mb], all_pools {[young] [8mb]->[4.3mb]/[266.2mb]}{[survivor] [18.6mb]->[20.9mb]/[33.2mb]}{[old] [338.2mb]->[378.2mb]/[691.2mb]}
[2017-06-20 18:27:37,451][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][157175][250] duration [4.3s], collections [1]/[4.5s], total [4.3s]/[7m], memory [610.8mb]->[459.6mb]/[990.7mb], all_pools {[young] [211.6mb]->[3.9mb]/[266.2mb]}{[survivor] [20.9mb]->[18.4mb]/[33.2mb]}{[old] [378.2mb]->[437.3mb]/[691.2mb]}
[2017-06-20 18:27:43,468][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][157177][251] duration [4.8s], collections [1]/[5s], total [4.8s]/[7.1m], memory [681.9mb]->[532.5mb]/[990.7mb], all_pools {[young] [226.2mb]->[4.9mb]/[266.2mb]}{[survivor] [18.4mb]->[10.7mb]/[33.2mb]}{[old] [437.3mb]->[516.9mb]/[691.2mb]}
[2017-06-20 18:27:48,043][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][157178][252] duration [4.4s], collections [1]/[4.5s], total [4.4s]/[7.2m], memory [532.5mb]->[697.6mb]/[990.7mb], all_pools {[young] [4.9mb]->[88.3mb]/[266.2mb]}{[survivor] [10.7mb]->[12.4mb]/[33.2mb]}{[old] [516.9mb]->[596.7mb]/[691.2mb]}
[2017-06-20 18:27:50,111][WARN ][http.netty               ] [node_petutor_01] Caught exception while handling client http traffic, closing connection [id: 0x290d85d7, /0:0:0:0:0:0:0:1:60262 => /0:0:0:0:0:0:0:1:9201]
org.jboss.netty.handler.codec.frame.TooLongFrameException: HTTP content length exceeded 104857600 bytes.
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:169)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2017-06-20 18:31:47,555][WARN ][monitor.jvm              ] [node_petutor_01] [gc][young][157412][259] duration [3.9s], collections [1]/[4.1s], total [3.9s]/[7.2m], memory [477.8mb]->[655.3mb]/[990.7mb], all_pools {[young] [6.1mb]->[96.8mb]/[266.2mb]}{[survivor] [11.3mb]->[10.1mb]/[33.2mb]}{[old] [460.4mb]->[548.3mb]/[691.2mb]}
[2017-06-20 18:31:47,607][WARN ][http.netty               ] [node_petutor_01] Caught exception while handling client http traffic, closing connection [id: 0x903cc57e, /0:0:0:0:0:0:0:1:61165 => /0:0:0:0:0:0:0:1:9201]
org.jboss.netty.handler.codec.frame.TooLongFrameException: HTTP content length exceeded 104857600 bytes.
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:169)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2017-06-20 18:34:47,587][WARN ][http.netty               ] [node_petutor_01] Caught exception while handling client http traffic, closing connection [id: 0x3fef7cbf, /0:0:0:0:0:0:0:1:61803 => /0:0:0:0:0:0:0:1:9201]
org.jboss.netty.handler.codec.frame.TooLongFrameException: HTTP content length exceeded 104857600 bytes.
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:169)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2017-06-20 18:35:01,732][INFO ][monitor.jvm              ] [node_petutor_01] [gc][young][157604][267] duration [969ms], collections [1]/[1.1s], total [969ms]/[7.3m], memory [356mb]->[302.1mb]/[990.7mb], all_pools {[young] [94.3mb]->[35.3mb]/[266.2mb]}{[survivor] [33.2mb]->[33.2mb]/[33.2mb]}{[old] [228.4mb]->[233.4mb]/[691.2mb]}
[2017-06-20 18:35:02,981][WARN ][http.netty               ] [node_petutor_01] Caught exception while handling client http traffic, closing connection [id: 0x093c9db8, /0:0:0:0:0:0:0:1:61854 => /0:0:0:0:0:0:0:1:9201]
org.jboss.netty.handler.codec.frame.TooLongFrameException: HTTP content length exceeded 104857600 bytes.
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:169)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2017-06-20 18:35:25,989][WARN ][http.netty               ] [node_petutor_01] Caught exception while handling client http traffic, closing connection [id: 0xdb2c2a00, /0:0:0:0:0:0:0:1:61935 => /0:0:0:0:0:0:0:1:9201]
org.jboss.netty.handler.codec.frame.TooLongFrameException: HTTP content length exceeded 104857600 bytes.
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:169)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
[2017-06-20 18:36:57,927][WARN ][http.netty               ] [node_petutor_01] Caught exception while handling client http traffic, closing connection [id: 0x7daa15eb, /0:0:0:0:0:0:0:1:62257 => /0:0:0:0:0:0:0:1:9201]
org.jboss.netty.handler.codec.frame.TooLongFrameException: HTTP content length exceeded 104857600 bytes.
	at org.jboss.netty.handler.codec.http.HttpChunkAggregator.messageReceived(HttpChunkAggregator.java:169)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(HttpContentDecoder.java:135)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:459)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:536)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:435)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:337)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
